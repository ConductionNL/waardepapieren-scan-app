{"version":3,"file":"component---src-pages-index-tsx-fecfc6df769de12226b8.js","mappings":"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","sources":["webpack://product-website-template/./src/templates/landing/LandingTemplate.tsx","webpack://product-website-template/./src/templates/landing/LandingTemplate.module.css","webpack://product-website-template/./src/pages/index.tsx","webpack://product-website-template/./node_modules/react-loading-skeleton/dist/index.js"],"sourcesContent":["import * as React from \"react\";\nimport * as styles from \"./LandingTemplate.module.css\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { Page, PageContent } from \"@utrecht/component-library-react/dist/css-module\";\nimport { QrReader } from \"react-qr-reader\";\nimport { navigate } from \"gatsby\";\n\nexport const LandingTemplate: React.FC = () => {\n  const [data, setData] = React.useState<boolean>(false);\n\n  return (\n    <Page>\n      <PageContent className={styles.container}>\n        {!data && (\n          <QrReader\n            onResult={(result, error) => {\n              if (!!result) {\n                setData(true);\n                const qrData: any = result;\n                navigate(`/${qrData.text}`);\n              }\n            }}\n            constraints={{ facingMode: \"environment\" }}\n          />\n        )}\n\n        {data && (\n          <>\n            <span>Redirecting</span> <Skeleton height=\"200px\" />\n          </>\n        )}\n      </PageContent>\n    </Page>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var container = \"LandingTemplate-module--container--dc5ab\";","import * as React from \"react\";\nimport { LandingTemplate } from \"../templates/landing/LandingTemplate\";\n\nconst IndexPage: React.FC = () => {\n  return <LandingTemplate />;\n};\n\nexport default IndexPage;\n","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["LandingTemplate","data","setData","React","_jsx","Page","children","_jsxs","PageContent","className","QrReader","onResult","result","error","qrData","navigate","text","constraints","facingMode","_Fragment","Skeleton","height","IndexPage","SkeletonThemeContext","defaultEnableAnimation","styleOptionsToCssProperties","baseColor","highlightColor","width","borderRadius","circle","direction","duration","enableAnimation","style","count","wrapper","Wrapper","customClassName","containerClassName","containerTestId","styleProp","originalPropsStyleOptions","_a","_b","_c","contextStyleOptions","propsStyleOptions","key","value","Object","entries","styleOptions","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","map","el"],"sourceRoot":""}